Create tables 
CREATE TABLE ITEMS (
    ITEM_ID INT PRIMARY KEY,
    ITEM_NAME VARCHAR(100),
    ITEM_TYPE VARCHAR(50),
    UNIT_PRICE DECIMAL(10, 2),
    QUANTITY_IN_STOCK INT,
    SUPPLIER_ID INT
);

CREATE TABLE MAINTENANCE_LOGS (
    LOG_ID INT PRIMARY KEY,
    ITEM_ID INT,
    MAINTENANCE_DATE DATE,
    LOG_TEXT CLOB,
    TECHNICIAN_ID INT,
    NEXT_SERVICE_DATE DATE,
    LOG_TEXT_VECTOR VECTOR,  
    FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ITEM_ID)
);

CREATE TABLE ORDERS (
    ORDER_ID INT PRIMARY KEY,
    ORDER_DATE DATE,
    EXPECTED_DELIVERY DATE,
    ACTUAL_DELIVERY VARCHAR2(50),  -- Use VARCHAR2 to handle cases like 'Invalid Date'
    SUPPLIER_ID INT,
    STATUS VARCHAR2(20)
);

CREATE TABLE ORDER_ITEMS (
    ORDER_ITEM_ID INT PRIMARY KEY,
    ORDER_ID INT,
    ITEM_ID INT,
    QUANTITY_ORDERED NUMBER,
    PRICE_PER_UNIT NUMBER(10, 2),
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ITEM_ID)
);

CREATE TABLE PERSONNEL (
    PERSONNEL_ID INT PRIMARY KEY,
    FIRST_NAME VARCHAR2(50),
    LAST_NAME VARCHAR2(50),
    RANK VARCHAR2(30),
    ROLE VARCHAR2(100),
    ASSIGNED_WAREHOUSE INT
);

CREATE TABLE SUPPLIERS (
    SUPPLIER_ID INT PRIMARY KEY,
    SUPPLIER_NAME VARCHAR2(100),
    CONTACT_NAME VARCHAR2(100),
    CONTACT_PHONE VARCHAR2(20),
    CONTACT_EMAIL VARCHAR2(100),
    ADDRESS VARCHAR2(255),
    CONTRACT_START_DATE TIMESTAMP
);

CREATE TABLE PROCUREMENT_DOCUMENTS (
    DOCUMENT_ID INT PRIMARY KEY,
    DOCUMENT_NAME VARCHAR2(100),
    DOCUMENT_TEXT CLOB,
    SUPPLIER_ID INT,
    DATE_UPLOADED TIMESTAMP,
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID)
);

CREATE TABLE SHIPMENTS (
    SHIPMENT_ID INT PRIMARY KEY,
    SHIPMENT_DATE DATE,
    WAREHOUSE_ID INT,
    DESTINATION VARCHAR2(100),
    SHIPMENT_STATUS VARCHAR2(50)
);

CREATE TABLE SHIPMENT_ITEMS (
    SHIPMENT_ITEM_ID INT PRIMARY KEY,
    SHIPMENT_ID INT,
    ITEM_ID INT,
    QUANTITY_SHIPPED NUMBER,
    FOREIGN KEY (SHIPMENT_ID) REFERENCES SHIPMENTS(SHIPMENT_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ITEM_ID)
);


CREATE TABLE SHIPMENT_REPORTS (
    REPORT_ID INT PRIMARY KEY,
    SHIPMENT_ID INT,
    REPORT_TEXT CLOB,
    REPORT_DATE TIMESTAMP,
    SUBMITTED_BY VARCHAR2(100),
    REPORT_TEXT_VECTOR VECTOR,  -- Store the vector as comma-separated values or JSON string
    FOREIGN KEY (SHIPMENT_ID) REFERENCES SHIPMENTS(SHIPMENT_ID)
);


CREATE TABLE WAREHOUSE (
    WAREHOUSE_ID INT PRIMARY KEY,
    LOCATION VARCHAR2(100),
    CAPACITY NUMBER,
    MANAGER_NAME VARCHAR2(100)
);

CREATE TABLE STOCK_LEVELS (
    STOCK_LEVEL_ID INT PRIMARY KEY,
    ITEM_ID INT,
    WAREHOUSE_ID INT,
    QUANTITY_IN_STOCK NUMBER,
    FOREIGN KEY (ITEM_ID) REFERENCES ITEMS(ITEM_ID),
    FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSE(WAREHOUSE_ID)
);

CREATE TABLE SUPPLIER_REVIEWS (
    REVIEW_ID INT PRIMARY KEY,
    SUPPLIER_ID INT,
    REVIEW_TEXT CLOB,
    RATING NUMBER(2, 1),
    REVIEW_DATE TIMESTAMP,
    SUBMITTED_BY VARCHAR2(100),
    SUPPLY_REVIEW_VECTOR VECTOR,  -- store vector as comma-separated string
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID)
);

ALTER TABLE SHIPMENTS
ADD CONSTRAINT fk_shipments_warehouse
FOREIGN KEY (WAREHOUSE_ID)
REFERENCES WAREHOUSE(WAREHOUSE_ID);

ALTER TABLE PERSONNEL
ADD CONSTRAINT fk_personnel_warehouse
FOREIGN KEY (ASSIGNED_WAREHOUSE)
REFERENCES WAREHOUSE(WAREHOUSE_ID);

ALTER TABLE SUPPLIERS 
ADD CONTRACT_END_DATE TIMESTAMP;

ALTER TABLE PROCUREMENT_DOCUMENTS 
ADD DOCUMENT_TEXT_VECTOR VECTOR;

CREATE TABLE USER_QUESTIONS (
    QUESTION_ID NUMBER PRIMARY KEY,
    QUESTION_TEXT VARCHAR2(500),
    QUESTION_VECTOR VECTOR
);